name: CI/CD using github actions & docker

on:
  push:
    branches: ["develop"]

permissions:
  contents: read

jobs:
  CI-CD:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.ACTION_TOKEN }}
          submodules: recursive

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # gradle caching - 빌드 시간 향상
      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # gradle build
      - name: Build with Gradle
        run: |
          chmod +x gradlew
          ./gradlew copySubmodule 
          ./gradlew build

      # docker build & push to develop
      - name: Docker build & push to dev
        if: contains(github.ref, 'develop')
        run: |
          sudo docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          
          sudo docker build -f ./eureka-server/Dockerfile --build-arg DEPENDENCY=build/dependency -t ${{ secrets.DOCKER_USERNAME }}/eureka --platform linux/amd64 .
          sudo docker push ${{ secrets.DOCKER_USERNAME }}/eureka
  
          sudo docker build -f ./api-gateway/Dockerfile --build-arg DEPENDENCY=build/dependency -t ${{ secrets.DOCKER_USERNAME }}/gateway --platform linux/amd64 .
          sudo docker push ${{ secrets.DOCKER_USERNAME }}/gateway
          
          sudo docker build -f ./auth-service/auth-container/Dockerfile --build-arg DEPENDENCY=build/dependency -t ${{ secrets.DOCKER_USERNAME }}/authservice --platform linux/amd64 .
          sudo docker push ${{ secrets.DOCKER_USERNAME }}/authservice
          
          sudo docker build -f ./image-service/image-container/Dockerfile --build-arg DEPENDENCY=build/dependency -t ${{ secrets.DOCKER_USERNAME }}/imageservice --platform linux/amd64 .
          sudo docker push ${{ secrets.DOCKER_USERNAME }}/imageservice
  
          sudo docker build -f ./member-service/member-container/Dockerfile --build-arg DEPENDENCY=build/dependency -t ${{ secrets.DOCKER_USERNAME }}/memberservice --platform linux/amd64 .
          sudo docker push ${{ secrets.DOCKER_USERNAME }}/memberservice
  
          sudo docker build -f ./team-service/team-container/Dockerfile --build-arg DEPENDENCY=build/dependency -t ${{ secrets.DOCKER_USERNAME }}/teamservice --platform linux/amd64 .
          sudo docker push ${{ secrets.DOCKER_USERNAME }}/teamservice
  
          sudo docker build -f ./thread-service/thread-container/Dockerfile --build-arg DEPENDENCY=build/dependency -t ${{ secrets.DOCKER_USERNAME }}/threadservice --platform linux/amd64 .
          sudo docker push ${{ secrets.DOCKER_USERNAME }}/threadservice

      ## deploy to develop
      - name: Deploy to dev
        uses: appleboy/ssh-action@master
        id: deploy-dev
        if: contains(github.ref, 'develop')
        with:
          host: ${{ secrets.HOST_DEV }} # EC2 퍼블릭 IPv4 DNS
          username: ${{ secrets.USERNAME }} # ubuntu
          password:
          port: 22
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            sudo docker rm -f $(sudo docker ps -aq)
            sudo docker rmi $(sudo docker images -q)

            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/eureka
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/gateway
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/authservice
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/imageservice
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/memberservice
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/teamservice
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/threadservice
            sudo docker pull redis
            sudo nohup docker run --add-host=host.docker.internal:host-gateway -p 9000:9000 ${{ secrets.DOCKER_USERNAME }}/eureka > eureka.out 2>&1 &
            sudo nohup docker run --add-host=host.docker.internal:host-gateway -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/gateway > gateway.out 2>&1 &
            sudo nohup docker run --add-host=host.docker.internal:host-gateway -p 8081:8081 ${{ secrets.DOCKER_USERNAME }}/authservice > authservice.out 2>&1 &
            sudo nohup docker run --add-host=host.docker.internal:host-gateway -p 9001:9001 ${{ secrets.DOCKER_USERNAME }}/imageservice > imageservice.out 2>&1 &
            sudo nohup docker run --add-host=host.docker.internal:host-gateway -p 8082:8082 ${{ secrets.DOCKER_USERNAME }}/memberservice > memberservice.out 2>&1 &
            sudo nohup docker run --add-host=host.docker.internal:host-gateway -p 8083:8083 ${{ secrets.DOCKER_USERNAME }}/teamservice  > teamservice.out 2>&1 &
            sudo nohup docker run --add-host=host.docker.internal:host-gateway -p 8084:8084 ${{ secrets.DOCKER_USERNAME }}/threadservice > threadservice.out 2>&1 &
            sudo nohup docker run -d -p 6379:6379 redis > redis.out